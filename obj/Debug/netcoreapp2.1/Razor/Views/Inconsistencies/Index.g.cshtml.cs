#pragma checksum "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f835c396125d2adb504d25fa5824dafbb8618ece"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Inconsistencies_Index), @"mvc.1.0.view", @"/Views/Inconsistencies/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Inconsistencies/Index.cshtml", typeof(AspNetCore.Views_Inconsistencies_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Everis\SecondTake\Everis\Views\_ViewImports.cshtml"
using Everis;

#line default
#line hidden
#line 2 "E:\Everis\SecondTake\Everis\Views\_ViewImports.cshtml"
using Everis.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f835c396125d2adb504d25fa5824dafbb8618ece", @"/Views/Inconsistencies/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4108824d81b49f66b6066fcf6a3d2ee5e3a19c09", @"/Views/_ViewImports.cshtml")]
    public class Views_Inconsistencies_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Everis.ViewModels.SpreadsheetsViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datatables/js/jquery.dataTables.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datatables/js/dataTables.bootstrap.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datatables/css/dataTables.bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("exclude", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(136, 43, true);
            WriteLiteral("\r\n<h2>Histórico de inconsistências</h2>\r\n\r\n");
            EndContext();
#line 9 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
 if (Model.Inconsistencies.Count == 0)
{

#line default
#line hidden
            BeginContext(222, 43, true);
            WriteLiteral("    <p>Não ocorreram inconsistências.</p>\r\n");
            EndContext();
#line 12 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
}
else
{

#line default
#line hidden
            BeginContext(277, 503, true);
            WriteLiteral(@"    <table id=""inconsistenciesTable"" class=""table table-bordered table-hover"">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tipo de inconsistência</th>
                <th>Planilha</th>
                <th>Data da Planilha</th>
                <th>Data de Upload</th>
                <th>Coluna</th>
                <th>Linha</th>
                <th>Atributo</th>
                <th>Valor lido</th>
            </tr>
        </thead>
        <tbody>
");
            EndContext();
#line 30 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
             foreach (var inconsistency in Model.Inconsistencies)
            {
                var spreadsheet = Model.Spreadsheets.Where(s => s == inconsistency.SpreadsheetID).FirstOrDefault();


#line default
#line hidden
            BeginContext(981, 38, true);
            WriteLiteral("            <tr>\r\n                <td>");
            EndContext();
            BeginContext(1020, 16, false);
#line 35 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
               Write(inconsistency.ID);

#line default
#line hidden
            EndContext();
            BeginContext(1036, 29, true);
            WriteLiteral("</td>\r\n                <td>\r\n");
            EndContext();
#line 37 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                     switch (inconsistency.Type)
                    {
                        case InconsistencyType.MissingAttributeOnSheet:

#line default
#line hidden
            BeginContext(1211, 50, true);
            WriteLiteral("                    <p>Atributo não encontrado</p>");
            EndContext();
#line 40 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                                  ; break;
                        case InconsistencyType.MissingDataOnCell:

#line default
#line hidden
            BeginContext(1338, 46, true);
            WriteLiteral("                    <p>Dado não encontrado</p>");
            EndContext();
#line 42 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                              ; break;
                        case InconsistencyType.WrongDataTypeOnCell:

#line default
#line hidden
            BeginContext(1463, 46, true);
            WriteLiteral("                    <p>Tipo de dado errado</p>");
            EndContext();
#line 44 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                              ; break;
                    }

#line default
#line hidden
            BeginContext(1542, 45, true);
            WriteLiteral("                </td>\r\n                <td>\r\n");
            EndContext();
#line 48 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                       if (spreadsheet != null)
                        {
                            if (spreadsheet.Title == null)
                            {
                                

#line default
#line hidden
            BeginContext(1787, 85, false);
#line 52 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                           Write(Html.ActionLink("Sem Título", "Details", "Spreadsheets", new { id = spreadsheet.ID }));

#line default
#line hidden
            EndContext();
#line 52 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                                                                                                      
                            }
                            else
                            {
                                

#line default
#line hidden
            BeginContext(2003, 90, false);
#line 56 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                           Write(Html.ActionLink(spreadsheet.Title, "Details", "Spreadsheets", new { id = spreadsheet.ID }));

#line default
#line hidden
            EndContext();
#line 56 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                                                                                                                                           
                            }
                        }
                        else
                        {

#line default
#line hidden
            BeginContext(2242, 47, true);
            WriteLiteral("                            <p>Sem Título</p>\r\n");
            EndContext();
#line 62 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                        }
                    

#line default
#line hidden
            BeginContext(2339, 43, true);
            WriteLiteral("                </td>\r\n                <td>");
            EndContext();
            BeginContext(2383, 25, false);
#line 65 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
               Write(spreadsheet.ReferenceDate);

#line default
#line hidden
            EndContext();
            BeginContext(2408, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
            BeginContext(2436, 21, false);
#line 66 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
               Write(spreadsheet.DateAdded);

#line default
#line hidden
            EndContext();
            BeginContext(2457, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
            BeginContext(2485, 21, false);
#line 67 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
               Write(inconsistency.Collumn);

#line default
#line hidden
            EndContext();
            BeginContext(2506, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
            BeginContext(2534, 17, false);
#line 68 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
               Write(inconsistency.Row);

#line default
#line hidden
            EndContext();
            BeginContext(2551, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
#line 69 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                     switch (inconsistency.Attribute) {
                            case InconsistentAttribute.Code:

#line default
#line hidden
            BeginContext(2677, 37, true);
            WriteLiteral("                        <p>Código</p>");
            EndContext();
#line 71 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                     ; break;
                            case InconsistentAttribute.Company:

#line default
#line hidden
            BeginContext(2789, 38, true);
            WriteLiteral("                        <p>Empresa</p>");
            EndContext();
#line 73 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                      ; break;
                            case InconsistentAttribute.Date:

#line default
#line hidden
            BeginContext(2899, 35, true);
            WriteLiteral("                        <p>Data</p>");
            EndContext();
#line 75 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                   ; break;
                            case InconsistentAttribute.Income:

#line default
#line hidden
            BeginContext(3008, 38, true);
            WriteLiteral("                        <p>Entrada</p>");
            EndContext();
#line 77 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                      ; break;
                            case InconsistentAttribute.Name:

#line default
#line hidden
            BeginContext(3118, 35, true);
            WriteLiteral("                        <p>Nome</p>");
            EndContext();
#line 79 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                   ; break;
                            case InconsistentAttribute.Outcome:

#line default
#line hidden
            BeginContext(3228, 36, true);
            WriteLiteral("                        <p>Saída</p>");
            EndContext();
#line 81 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                    ; break;
                            case InconsistentAttribute.Stock:

#line default
#line hidden
            BeginContext(3337, 38, true);
            WriteLiteral("                        <p>Estoque</p>");
            EndContext();
#line 83 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
                                      ; break;
                        }

#line default
#line hidden
            BeginContext(3412, 43, true);
            WriteLiteral("                </td>\r\n                <td>");
            EndContext();
            BeginContext(3456, 23, false);
#line 86 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
               Write(inconsistency.CellValue);

#line default
#line hidden
            EndContext();
            BeginContext(3479, 26, true);
            WriteLiteral("</td>\r\n            </tr>\r\n");
            EndContext();
#line 88 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
            }

#line default
#line hidden
            BeginContext(3520, 32, true);
            WriteLiteral("        </tbody>\r\n    </table>\r\n");
            EndContext();
#line 91 "E:\Everis\SecondTake\Everis\Views\Inconsistencies\Index.cshtml"
}

#line default
#line hidden
            BeginContext(3555, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(3590, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(3596, 292, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1941efde93904cb799559351d6191652", async() => {
                    BeginContext(3631, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(3641, 64, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30e82658d90d49c8999299f776fc3c72", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(3705, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(3715, 67, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0403a0d74584f41b0f1ca4cee6822b2", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(3782, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(3792, 76, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "e1d8e64e942e4cecb33101fcbd14badb", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(3868, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3888, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(3896, 292, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a2ce886d7f634e18ba68762870e8aa68", async() => {
                    BeginContext(3931, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(3941, 64, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7dee22e4ffa7499f864ed4e88937eab1", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(4005, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(4015, 67, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c56e437d95c14ff7bde8caa108bd2ae3", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(4082, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(4092, 76, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d3e406bee4b0496d945b60fc9007eaa9", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(4168, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Exclude = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4188, 182, true);
                WriteLiteral("\r\n    <script>\r\n                        $(document).ready(function () {\r\n            $(\"#inconsistenciesTable\").DataTable();\r\n                    });\r\n    </script>\r\n                ");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Everis.ViewModels.SpreadsheetsViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
